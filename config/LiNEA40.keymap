#define ZMK_POINTING_DEFAULT_SCRL_VAL 150
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

#define FUNCTION 1
#define NUM 2
#define SYSTEM 3
#define MOUSE 4
#define SCROLL 5

// tap-hold preference
&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <0>;
    tapping-term-ms = <150>;
};

//mouse cursor
&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

//mouse scroll
&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        /omit-if-no-ref/ zip_temp_layer: zip_temp_layer {
            compatible = "zmk,input-processor-temp-layer";
            #input-processor-cells = <2>;
            excluded-positions = <
                7 // I
                16  // J
                17 // K
                18 // L
                35 // SPACE
            >;
        };

        /omit-if-no-ref/ zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

&msc_input_listener {
    speed_up {
        layers = <FUNCTION>;
        input-processors = <&zip_wheel_scaler 3 1>; //スクロールを3倍速にする
    };
};


&trackball_listener {
    scroller {
        layers = <SCROLL>;
        input-processors = <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT> //スクロール方向を逆転
                         , <&zip_xy_to_scroll_mapper>;
    };
};



/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        re_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W        &kp E  &kp R  &kp T                                             &kp Y  &kp U  &kp I                &kp O             &kp P
&kp A             &kp S        &kp D  &kp F  &kp G                                    &kp H  &kp J  &kp K                &kp L             &kp MINUS
&mt LEFT_SHIFT Z  &mt LCTRL X  &kp C  &kp V  &kp B                               &kp N  &kp M  &mt RIGHT_WIN COMMA  &mt RCTRL PERIOD  &mt RIGHT_SHIFT SLASH
&none             &none        &none  &none  &mo 1  &mt LEFT_ALT SPACE  &mt RIGHT_SHIFT ENTER  &mo 2                                                &none
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp ESC         &mt LEFT_WIN GRAVE  &kp LANG2  &kp SQT       &kp LEFT_PARENTHESIS                         &kp RIGHT_PARENTHESIS  &kp PAGE_UP     &kp UP_ARROW        &kp PAGE_DOWN  &kp EQUAL
&kp DELETE      &kp TAB             &kp LANG1  &kp LEFT_ALT  &kp LEFT_BRACKET                &kp RIGHT_BRACKET      &kp LEFT_ARROW  &kp DOWN_ARROW      &kp RIGHT      &kp SEMICOLON
&kp LEFT_SHIFT  &kp LCTRL           &none      &kp LG(H)     &kp LEFT_BRACE                  &kp RIGHT_BRACE        &kp HOME        &kp K_CONTEXT_MENU  &mt RCTRL END  &mt RIGHT_SHIFT BACKSLASH
&trans          &trans              &trans     &trans        &trans                &trans  &kp BACKSPACE  &mo 3                                                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp F1              &kp F2         &kp F3  &kp F4   &kp F5                     &kp F6  &kp F7  &kp F8         &kp F9            &kp F10
&kp N1              &kp N2         &kp N3  &kp N4   &kp N5       &kp N6  &kp N7  &kp N8         &kp N9            &kp N0
&mt LEFT_SHIFT F11  &mt LCTRL F12  &none   &kp TAB  &kp ENTER    &none   &none   &kp RIGHT_WIN  &mt RCTRL PERIOD  &kp RIGHT_SHIFT
&trans              &trans         &trans  &trans   &mo 3      &trans  &trans  &trans                                           &trans
            >;
            
            sensor-bindings = <&re_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYSTEM {
            bindings = <
&none           &none         &none         &none         &none                             &none   &none  &none          &none      &none
&none           &none         &none         &none         &none           &none   &none  &none          &none      &none
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR      &none   &none  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_SHIFT
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                                   &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                     &trans  &trans     &mkp MCLK  &trans     &trans
&trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK  &mo 5      &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &mkp LCLK  &trans  &trans                                   &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                     &trans  &trans     &mkp MCLK  &trans     &trans
&trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK  &mo 5      &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &mkp LCLK  &trans  &trans                                   &trans
            >;
        };
    };
};
